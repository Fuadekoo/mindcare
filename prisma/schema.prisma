generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id        String   @id @default(cuid())
  username  String
  phone     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model student {
  wdt_ID           Int                @id @default(autoincrement())
  name             String?
  passcode         String?            @unique
  phoneno          String?            @unique
  country          String?
  status           String?
  isKid            Boolean?           @default(false)
  ustaz            String?
  subject          String?
  package          String?
  youtubeSubject   String?
  chat_id          String?            @default("")
  u_control        String?            @db.VarChar(255)
  appointment      appointment[]
  history          history[]
  progressTracking progressTracking[]

  @@map("wpos_wpdatatable_23")
}

model appointment {
  id        String   @id @default(cuid())
  studentId Int
  date      DateTime
  time      String
  status    String   @default("pending")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  student   student  @relation(fields: [studentId], references: [wdt_ID])
}

// history model (it has a diagonistic,obervation, and treatmentor medication)

model history {
  id              String        @id @default(cuid())
  studentId       Int
  historyCode     String        @unique @default(cuid())
  patientTypeData String
  solved          Boolean       @default(false)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  student         student       @relation(fields: [studentId], references: [wdt_ID])
  patientData     patientType   @relation(fields: [patientTypeData], references: [id])
  diagnosis       diagnosis[]
  observation     observation[]
  treatment       treatment[]
}

model diagnosis {
  id          String   @id @default(cuid())
  description String
  historyId   String
  history     history  @relation(fields: [historyId], references: [id])
  createdAt   DateTime @default(now())
}

model observation {
  id          String   @id @default(cuid())
  description String
  historyId   String
  history     history  @relation(fields: [historyId], references: [id])
  createdAt   DateTime @default(now())
}

model treatment {
  id          String   @id @default(cuid())
  description String
  historyId   String
  history     history  @relation(fields: [historyId], references: [id])
  createdAt   DateTime @default(now())
}

model patientType {
  id          String    @id @default(cuid())
  type        String    @unique
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  history     history[]
}

model progressTracking {
  id        String   @id @default(cuid())
  studentId Int
  progress  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  student   student  @relation(fields: [studentId], references: [wdt_ID])
}

model todoList {
  id        String   @id @default(cuid())
  note      String
  status    String   @default("pending")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
